{"version":3,"sources":["components/Navbar.js","components/Hero.js","components/HomeContent.js","components/Home.js","components/Product.js","components/Products.js","components/ProductAdmin.js","components/FormErrors.js","components/utility/FormValidation.js","components/auth/LogIn.js","components/auth/Register.js","components/auth/ForgotPassword.js","components/auth/ForgotPasswordVerification.js","components/auth/ChangePassword.js","components/auth/ChangePasswordConfirm.js","components/auth/Welcome.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","handleLogOut","event","a","preventDefault","Auth","signOut","props","auth","setAuthStatus","setUser","error","console","log","message","className","role","aria-label","href","src","width","height","alt","id","this","isAuthenticated","user","username","onClick","Component","Hero","HomeContent","Home","ProductAdmin","state","isEditMode","updatedproductname","name","updatepassword","password","updateaddress","address","handleProductEdit","setState","handleEditSave","handleUpdateProduct","onAddProductNameChange","target","value","onAddPasswordChange","onAddAddressChange","isAdmin","icon","handleDeleteProduct","type","placeholder","onChange","config","require","Products","newproduct","products","fetchProducts","axios","get","api","invokeUrl","res","data","params","patch","productToUpdate","Users","find","product","updatedProducts","filter","user_email","user_password","user_address","push","componentDidMount","length","map","user_id","handleAddProduct","post","delete","onSubmit","FormErrors","formerrors","blankfield","passwordmatch","apierrors","cognito","validateForm","inputs","document","getElementsByClassName","i","classList","contains","remove","hasOwnProperty","getElementById","add","firstname","lastname","email","verificationcode","oldpassword","newpassword","confirmpassword","LogIn","errors","clearErrorState","handleSubmit","Validate","signIn","history","err","onInputChange","aria-describedby","Register","signUp","attributes","signUpResponse","ForgotPassword","forgotPasswordHandler","forgotPassword","ForgotPasswordVerification","passwordVerificationHandler","forgotPasswordSubmit","ChangePassword","currentAuthenticatedUser","changePassword","ChangePasswordConfirmation","Welcome","Footer","library","faEdit","App","isAuthenticating","authenticated","currentSession","session","authProps","Switch","Route","exact","path","render","ChangePasswordConfirm","Boolean","window","location","hostname","match","Amplify","configure","mandatorySignIn","region","REGION","userPoolId","USER_POOL_ID","userPoolWebClientId","APP_CLIENT_ID","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c607f0f8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Auth } from 'aws-amplify';\n\nexport default class Navbar extends Component {\n  handleLogOut = async event => {\n    event.preventDefault();\n    try {\n      Auth.signOut();\n      this.props.auth.setAuthStatus(false);\n      this.props.auth.setUser(null);\n    }catch(error) {\n      console.log(error.message);\n    }\n  }\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n          <a className=\"navbar-item\" href=\"/\">\n            <img src=\"aws.png\" width=\"112\" height=\"28\" alt=\"aws logo\" />\n          </a>\n        </div>\n\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <a href=\"/\" className=\"navbar-item\">\n              Home\n            </a>\n            <a href=\"/products\" className=\"navbar-item\">\n              Products\n            </a>\n            <a href=\"/admin\" className=\"navbar-item\">\n              Admin\n            </a>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              {this.props.auth.isAuthenticated && this.props.auth.user && (\n                <p>\n                  Hello {this.props.auth.user.username}\n                </p>\n              )}\n              <div className=\"buttons\">\n                {!this.props.auth.isAuthenticated && (\n                  <div>\n                    <a href=\"/register\" className=\"button is-primary\">\n                      <strong>Register</strong>\n                    </a>\n                    <a href=\"/login\" className=\"button is-light\">\n                      Log in\n                    </a>\n                  </div>\n                )}\n                {this.props.auth.isAuthenticated && (\n                  <a href=\"/\" onClick={this.handleLogOut} className=\"button is-light\">\n                    Log out\n                  </a>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n","import React from 'react';\n\nexport default function Hero() {\n  return (\n    <section className=\"hero is-primary\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <img src=\"energy.jpg\" alt=\"conserve energy\" />\n        </div>\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function HomeContent() {\n  return (\n    <section className=\"container\">\n        <div className=\"columns features\">\n            <div className=\"column is-4\">\n                <div className=\"card is-shady\">\n                    <div className=\"card-content\">\n                        <div className=\"content\">\n                            <h4>Content 1</h4>\n                            <p>Content 1</p>\n                            <p><a href=\"/\">Learn more</a></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"column is-4\">\n                <div className=\"card is-shady\">\n                    <div className=\"card-content\">\n                        <div className=\"content\">\n                            <h4>Content 2</h4>\n                            <p>Content 2</p>\n                            <p><a href=\"/\">Learn more</a></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"column is-4\">\n                <div className=\"card is-shady\">\n                     <div className=\"card-content\">\n                        <div className=\"content\">\n                            <h4>Content 3</h4>\n                            <p>Content 3</p>\n                            <p><a href=\"/\">Learn more</a></p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </section>\n  )\n}\n","import React, { Fragment } from 'react';\nimport Hero from './Hero';\nimport HomeContent from './HomeContent';\n\nexport default function Home() {\n  return (\n    <Fragment>\n      <Hero />\n      <div className=\"box cta\">\n        <p className=\"has-text-centered\">\n          <span className=\"tag is-primary\">New</span> We can learn a lot about AWS. \n        </p>\n      </div>\n      <HomeContent />\n    </Fragment>\n  )\n}\n","import React, { Component, Fragment }  from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default class ProductAdmin extends Component {\n\n  state = {\n    isEditMode: false,\n    updatedproductname: this.props.name,\n    updatepassword: this.props.password,\n    updateaddress: this.props.address\n  }\n\n  handleProductEdit = event => {\n    event.preventDefault();\n    this.setState({ isEditMode: true });\n  }\n\n  handleEditSave = event => {\n    event.preventDefault();\n    this.setState({ isEditMode: false });\n    this.props.handleUpdateProduct(this.props.id, this.state.updatedproductname, this.state.updatepassword, this.state.updateaddress);\n  }\n\n  onAddProductNameChange = event => this.setState({ \"updatedproductname\": event.target.value });\n  onAddPasswordChange = event => this.setState({ \"updatepassword\": event.target.value });\n  onAddAddressChange = event => this.setState({ \"updateaddress\": event.target.value });\n\n  render() {\n    return (\n      <div className=\"tile is-child box notification is-success\">\n        {\n          this.props.isAdmin && \n          <Fragment>\n            <a href=\"/\" onClick={this.handleProductEdit} className=\"product-edit-icon\">\n              <FontAwesomeIcon icon=\"edit\" />\n            </a>\n            <button onClick={event => this.props.handleDeleteProduct(this.props.id, event)} className=\"delete\"></button>\n          </Fragment>\n        }\n        {\n          this.state.isEditMode \n          ? <div>\n              <p>Edit product name</p>\n              <input \n                className=\"input is-medium\"\n                type=\"text\" \n                placeholder=\"Enter Username\"\n                value={this.state.updatedproductname}\n                onChange={this.onAddProductNameChange}\n              />\n              <p>Edit Password</p>\n              <input \n                className=\"input is-medium\"\n                type=\"text\" \n                placeholder=\"Enter Password\"\n                value={this.state.updatepassword}\n                onChange={this.onAddPasswordChange}\n              />\n              <p>Edit Address</p>\n              <input \n                className=\"input is-medium\"\n                type=\"text\" \n                placeholder=\"Enter Address\"\n                value={this.state.updateaddress}\n                onChange={this.onAddAddressChange}\n              />\n              <p className=\"product-id\">id: { this.props.id }</p>\n              <button type=\"submit\" \n                className=\"button is-info is-small\"\n                onClick={ this.handleEditSave }\n              >save</button>\n            </div>\n          : <div>\n              <p className=\"product-id\">id: { this.props.id }</p>\n              <p className=\"product-title\">{ this.props.name }</p>\n              <p className=\"product-title\">{ this.props.password }</p>\n              <p className=\"product-title\">{ this.props.address }</p>\n              \n            </div>\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport Product from './Product';\nimport axios from \"axios\";\nconst config = require('../config.json');\n\nexport default class Products extends Component {\n\n  state = {\n    newproduct: null,\n    products: []\n  }\n\n  fetchProducts = async () => {\n    // add call to AWS API Gateway to fetch products here\n    // then set them in state\n\n    try {\n      const res = await axios.get(`${config.api.invokeUrl}/users/`);\n      //res.header(\"Access-Control-Allow-Origin\", \"*\");\n      const products = res.data;\n      //console.log(products)\n      this.setState({ products: products });\n    } catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  handleUpdateProduct = async (id, name,password,address) => {\n    // add call to AWS API Gateway update product endpoint here\n    try {\n      const params = {\n        \"user_id\" : id,\n        \"email\": name,\n        \"password\": password,\n        \"address\": address\n      };\n      console.log(\"**********************************************\");\n      console.log(params);\n      console.log(\"----------------------------------------------\")\n      console.log(name);\n\n      await axios.patch(`${config.api.invokeUrl}/users/${id}`, params);\n      const productToUpdate = [...this.state.products.Users].find(product => product.id === id);\n      const updatedProducts = [...this.state.products.Users].filter(product => product.id !== id);\n      productToUpdate.user_email = name;\n      productToUpdate.user_password = password;\n      productToUpdate.user_address = address;\n      updatedProducts.push(productToUpdate);\n      this.setState({products: updatedProducts});\n    }catch (err) {\n      console.log(`Error updating product: ${err}`);\n    }\n    \n  }\n\n  componentDidMount = () => {\n   this.fetchProducts();\n  }\n\n  render() {\n    const data=this.state.products.Users;\n    console.log(\"--------------==================\")\n    if(data){\n    console.log(data[0].user_email);}\n    console.log(typeof data);\n    return (\n      <Fragment>\n        <section className=\"section\">\n          <div className=\"container\">\n            <h1>List of Users :</h1>\n            <p className=\"subtitle is-5\">You can see the created users below :</p>\n            <br />\n            <div className=\"columns\">\n              <div className=\"column\">\n                <div className=\"tile is-ancestor\">\n                  <div className=\"tile is-4 is-parent  is-vertical\">\n                    {\n                      data && data.length > 0\n                    ? data.map((product) => \n                    <Product \n                      isAdmin={true}\n                      handleUpdateProduct={this.handleUpdateProduct}\n                      //handleDeleteProduct={this.handleDeleteProduct}\n                      id={product.user_id}\n                      name={product.user_email}\n                      password={product.user_password}\n                      address={product.user_address}\n                      key={product.user_id}\n                      />)\n                    : <div className=\"tile notification is-warning\">No products available</div>\n                    }\n                    \n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport Product from './Product';\nimport axios from \"axios\";\nconst config = require('../config.json');\n\nexport default class ProductAdmin extends Component {\n\n  state = {\n    newproduct: {\n      \"user_id\": \"\",\n      \"user_email\": \"\",\n      \"user_password\":\"\",\n      \"user_address\":\"\"\n    },\n    products: []\n  }\n\n  handleAddProduct = async (id, event) => {\n    event.preventDefault();\n    // add call to AWS API Gateway add product endpoint here\n    try {\n      const params = {\n        \"user_id\":id,\n        \"email\": this.state.newproduct.user_email,\n        \"password\": this.state.newproduct.user_password,\n        \"address\": this.state.newproduct.user_address\n      };\n      await axios.post(`${config.api.invokeUrl}/users/`, params);\n      this.setState({ products: [...this.state.products.Users, this.state.newproduct] });\n      this.setState({ newproduct: { \"user_id\": \"\", \"user_email\": \"\", \"user_password\":\"\" ,\"user_address\":\"\"}});\n      console.log(\"*********************************************\")\n      console.log(this.state.products)\n    }catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  handleUpdateProduct = async (id, name,password,address) => {\n    // add call to AWS API Gateway update product endpoint here\n    try {\n      const params = {\n        \"user_id\" : id,\n        \"email\": name,\n        \"password\": password,\n        \"address\": address\n      };\n      console.log(\"**********************************************\");\n      console.log(params);\n      console.log(\"----------------------------------------------\")\n      console.log(name);\n\n      await axios.patch(`${config.api.invokeUrl}/users/${id}`, params);\n      const productToUpdate = [...this.state.products.Users].find(product => product.id === id);\n      const updatedProducts = [...this.state.products.Users].filter(product => product.id !== id);\n      productToUpdate.user_email = name;\n      productToUpdate.user_password = password;\n      productToUpdate.user_address = address;\n      updatedProducts.push(productToUpdate);\n      this.setState({products: updatedProducts});\n    }catch (err) {\n      console.log(`Error updating product: ${err}`);\n    }\n    \n  }\n\n  handleDeleteProduct = async (id, event) => {\n    event.preventDefault();\n    // add call to AWS API Gateway delete product endpoint here\n    try {\n      await axios.delete(`${config.api.invokeUrl}/users/${id}`);\n      const updatedProducts = [...this.state.products.Users].filter(product => product.user_id !== id);\n      this.setState({products: updatedProducts});\n    }catch (err) {\n      console.log(`Unable to delete product: ${err}`);\n    }\n  }\n\n  fetchProducts = async () => {\n    // add call to AWS API Gateway to fetch products here\n    // then set them in state\n    try {\n      const res = await axios.get(`${config.api.invokeUrl}/users`);\n      const products = res.data;\n      this.setState({ products: products });\n    } catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  onAddProductNameChange = event => this.setState({ newproduct: { ...this.state.newproduct, \"user_email\": event.target.value } });\n  onAddAddressChange = event => this.setState({ newproduct: { ...this.state.newproduct, \"user_address\": event.target.value } });\n  onAddPasswordChange = event => this.setState({ newproduct: { ...this.state.newproduct, \"user_password\": event.target.value } });\n  componentDidMount = () => {\n    this.fetchProducts();\n  }\n\n  render() {\n    const data=this.state.products.Users;\n    //console.log(data);\n    return (\n      <Fragment>\n        <section className=\"section\">\n          <div className=\"container\">\n            <h1>User Admin</h1>\n            <p className=\"subtitle is-5\">Add and remove Users using the form below:</p>\n            <br />\n            <div className=\"columns\">\n              <div className=\"column is-one-third\">\n                <form onSubmit={event => this.handleAddProduct(this.state.newproduct.id, event)}>\n                  <div className=\"field has-addons\">\n                    <div className=\"control\">\n                      <input \n                        className=\"input is-medium\"\n                        type=\"text\" \n                        placeholder=\"Enter username\"\n                        value={this.state.newproduct.user_email}\n                        onChange={this.onAddProductNameChange}\n                      />\n                    </div>\n                    <div className=\"control\">\n                      <input \n                        className=\"input is-medium\"\n                        type=\"text\" \n                        placeholder=\"Enter password\"\n                        value={this.state.newproduct.user_password}\n                        onChange={this.onAddPasswordChange}\n                      />\n                    </div>\n                    <div className=\"control\">\n                      <input \n                        className=\"input is-medium\"\n                        type=\"text\" \n                        placeholder=\"Enter address\"\n                        value={this.state.newproduct.user_address}\n                        onChange={this.onAddAddressChange}\n                      />\n                    </div>\n                    <div className=\"control\">\n                      <button type=\"submit\" className=\"button is-primary is-medium\">\n                        Add product\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"column is-two-thirds\">\n                <div className=\"tile is-ancestor\">\n                  <div className=\"tile is-4 is-parent  is-vertical\">\n                  {\n                      data && data.length > 0\n                    ? data.map((product) => \n                    <Product \n                      isAdmin={true}\n                      handleUpdateProduct={this.handleUpdateProduct}\n                      handleDeleteProduct={this.handleDeleteProduct}\n                      password={product.user_password}\n                      address={product.user_address}\n                      name={product.user_email} \n                      id={product.user_id}\n                      key={product.user_id}\n                      />)\n                    : <div className=\"tile notification is-warning\">No products available</div>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    )\n  }\n}\n","import React from \"react\";\n\nfunction FormErrors(props) {\n  if (\n    props.formerrors &&\n    (props.formerrors.blankfield || props.formerrors.passwordmatch)\n  ) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.passwordmatch\n            ? \"Password value does not match confirm password value\"\n            : \"\"}\n        </div>\n        <div className=\"row justify-content-center help is-danger\">\n          {props.formerrors.blankfield ? \"All fields are required\" : \"\"}\n        </div>\n      </div>\n    );\n  } else if (props.apierrors) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">{props.apierrors}</div>\n      </div>\n    );\n  } else if (props.formerrors && props.formerrors.cognito) {\n    return (\n      <div className=\"error container help is-danger\">\n        <div className=\"row justify-content-center\">\n          {props.formerrors.cognito.message}\n        </div>\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n}\n\nexport default FormErrors;","function validateForm(event, state) {\n  // clear all error messages\n  const inputs = document.getElementsByClassName(\"is-danger\");\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].classList.contains(\"error\")) {\n      inputs[i].classList.remove(\"is-danger\");\n    }\n  }\n\n  if (state.hasOwnProperty(\"username\") && state.username === \"\") {\n    document.getElementById(\"username\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"firstname\") && state.firstname === \"\") {\n    document.getElementById(\"firstname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"lastname\") && state.lastname === \"\") {\n    document.getElementById(\"lastname\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"email\") && state.email === \"\") {\n    document.getElementById(\"email\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"verificationcode\") &&\n    state.verificationcode === \"\"\n  ) {\n    document.getElementById(\"verificationcode\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"password\") && state.password === \"\") {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"oldpassword\") && state.oldpassword === \"\") {\n    document.getElementById(\"oldpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"newpassword\") && state.newpassword === \"\") {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (state.hasOwnProperty(\"confirmpassword\") && state.confirmpassword === \"\") {\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { blankfield: true };\n  }\n  if (\n    state.hasOwnProperty(\"password\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.password !== state.confirmpassword\n  ) {\n    document.getElementById(\"password\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  if (\n    state.hasOwnProperty(\"newpassword\") &&\n    state.hasOwnProperty(\"confirmpassword\") &&\n    state.newpassword !== state.confirmpassword\n  ) {\n    document.getElementById(\"newpassword\").classList.add(\"is-danger\");\n    document.getElementById(\"confirmpassword\").classList.add(\"is-danger\");\n    return { passwordmatch: true };\n  }\n  return;\n}\n\nexport default validateForm;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\n\nclass LogIn extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.signIn(this.state.username, this.state.password);\n      console.log(user);\n      this.props.auth.setAuthStatus(true);\n      this.props.auth.setUser(user);\n      this.props.history.push(\"/\");\n    }catch(error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Log in</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"usernameHelp\"\n                  placeholder=\"Enter username or email\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Login\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LogIn;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from \"aws-amplify\";\n\nclass Register extends Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    const { username, email, password } = this.state;\n    try {\n      const signUpResponse = await Auth.signUp({\n        username,\n        password,\n        attributes: {\n          email: email\n        }\n      });\n      this.props.history.push(\"/welcome\");\n      console.log(signUpResponse);\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: {\n          ...this.state.errors,\n          cognito: err\n        }\n      });\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Register</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input \n                  className=\"input\" \n                  type=\"text\"\n                  id=\"username\"\n                  aria-describedby=\"userNameHelp\"\n                  placeholder=\"Enter username\"\n                  value={this.state.username}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  value={this.state.password}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Register\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default Register;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ForgotPassword extends Component {\n  state = {\n    email: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  }\n\n  forgotPasswordHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.forgotPassword(this.state.email);\n      this.props.history.push('/forgotpasswordverification');\n    }catch(error) {\n      console.log(error);\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Forgot your password?</h1>\n          <p>\n            Please enter the email address associated with your account and we'll\n            email you a password reset link.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.forgotPasswordHandler}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  type=\"email\"\n                  className=\"input\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPassword;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ForgotPasswordVerification extends Component {\n  state = {\n    verificationcode: \"\",\n    email: \"\",\n    newpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false\n    }\n  };\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false\n      }\n    });\n  };\n\n  passwordVerificationHandler = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      await Auth.forgotPasswordSubmit(\n        this.state.email,\n        this.state.verificationcode,\n        this.state.newpassword\n      );\n      this.props.history.push(\"/changepasswordconfirmation\");\n    }catch(error) {\n      console.log(error);\n    }\n  };\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  };\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Set new password</h1>\n          <p>\n            Please enter the verification code sent to your email address below,\n            your email address and a new password.\n          </p>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.passwordVerificationHandler}>\n            <div className=\"field\">\n              <p className=\"control\">\n                <input\n                  type=\"text\"\n                  className=\"input\"\n                  id=\"verificationcode\"\n                  aria-describedby=\"verificationCodeHelp\"\n                  placeholder=\"Enter verification code\"\n                  value={this.state.verificationcode}\n                  onChange={this.onInputChange}\n                />\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  placeholder=\"Enter email\"\n                  value={this.state.email}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-envelope\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  type=\"password\"\n                  className=\"input\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Submit\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ForgotPasswordVerification;","import React, { Component } from 'react';\nimport FormErrors from \"../FormErrors\";\nimport Validate from \"../utility/FormValidation\";\nimport { Auth } from 'aws-amplify';\n\nclass ChangePassword extends Component {\n  state = {\n    oldpassword: \"\",\n    newpassword: \"\",\n    confirmpassword: \"\",\n    errors: {\n      cognito: null,\n      blankfield: false,\n      passwordmatch: false\n    }\n  }\n\n  clearErrorState = () => {\n    this.setState({\n      errors: {\n        cognito: null,\n        blankfield: false,\n        passwordmatch: false\n      }\n    });\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    // Form validation\n    this.clearErrorState();\n    const error = Validate(event, this.state);\n    if (error) {\n      this.setState({\n        errors: { ...this.state.errors, ...error }\n      });\n    }\n\n    // AWS Cognito integration here\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      console.log(user);\n      await Auth.changePassword(\n        user,\n        this.state.oldpassword,\n        this.state.newpassword\n      );\n      this.props.history.push(\"/changepasswordconfirmation\");\n    } catch (error) {\n      let err = null;\n      !error.message ? err = { \"message\": error } : err = error;\n      this.setState({\n        errors: { ...this.state.errors, cognito: err }\n      });\n      console.log(err);\n    }\n  }\n\n  onInputChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value\n    });\n    document.getElementById(event.target.id).classList.remove(\"is-danger\");\n  }\n\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <FormErrors formerrors={this.state.errors} />\n\n          <form onSubmit={this.handleSubmit}>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input \n                  className=\"input\" \n                  type=\"password\"\n                  id=\"oldpassword\"\n                  placeholder=\"Old password\"\n                  value={this.state.oldpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"newpassword\"\n                  placeholder=\"New password\"\n                  value={this.state.newpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control has-icons-left\">\n                <input\n                  className=\"input\"\n                  type=\"password\"\n                  id=\"confirmpassword\"\n                  placeholder=\"Confirm password\"\n                  value={this.state.confirmpassword}\n                  onChange={this.onInputChange}\n                />\n                <span className=\"icon is-small is-left\">\n                  <i className=\"fas fa-lock\"></i>\n                </span>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <a href=\"/forgotpassword\">Forgot password?</a>\n              </p>\n            </div>\n            <div className=\"field\">\n              <p className=\"control\">\n                <button className=\"button is-success\">\n                  Change password\n                </button>\n              </p>\n            </div>\n          </form>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePassword;","import React, { Component } from \"react\";\n\nclass ChangePasswordConfirmation extends Component {\n  render() {\n    return (\n      <section className=\"section auth\">\n        <div className=\"container\">\n          <h1>Change Password</h1>\n          <p>Your password has been successfully updated!</p>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChangePasswordConfirmation;","import React from 'react';\n\nexport default function Welcome() {\n  return (\n    <section className=\"section auth\">\n      <div className=\"container\">\n        <h1>Welcome!</h1>\n        <p>You have successfully registered a new account.</p>\n        <p>We've sent you a email. Please click on the confirmation link to verify your account.</p>\n      </div>\n    </section>\n  )\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n           Mentor 2020. The source code is licensed Mentor ship.\n        </p>\n      </div>\n    </footer>\n  )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Products from './components/Products';\nimport ProductAdmin from './components/ProductAdmin';\nimport LogIn from './components/auth/LogIn';\nimport Register from './components/auth/Register';\nimport ForgotPassword from './components/auth/ForgotPassword';\nimport ForgotPasswordVerification from './components/auth/ForgotPasswordVerification';\nimport ChangePassword from './components/auth/ChangePassword';\nimport ChangePasswordConfirm from './components/auth/ChangePasswordConfirm';\nimport Welcome from './components/auth/Welcome';\nimport Footer from './components/Footer';\nimport { Auth } from 'aws-amplify';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faEdit);\n\nclass App extends Component {\n\n  state = {\n    isAuthenticated: false,\n    isAuthenticating: true,\n    user: null\n  }\n\n  setAuthStatus = authenticated => {\n    this.setState({ isAuthenticated: authenticated });\n  }\n\n  setUser = user => {\n    this.setState({ user: user });\n  }\n\n  async componentDidMount() {\n    try {\n      const session = await Auth.currentSession();\n      this.setAuthStatus(true);\n      console.log(session);\n      const user = await Auth.currentAuthenticatedUser();\n      this.setUser(user);\n    } catch(error) {\n      if (error !== 'No current user') {\n        console.log(error);\n      }\n    }\n  \n    this.setState({ isAuthenticating: false });\n  }\n\n  render() {\n    const authProps = {\n      isAuthenticated: this.state.isAuthenticated,\n      user: this.state.user,\n      setAuthStatus: this.setAuthStatus,\n      setUser: this.setUser\n    }\n    return (\n      !this.state.isAuthenticating &&\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar auth={authProps} />\n            <Switch>\n              <Route exact path=\"/\" render={(props) => <Home {...props} auth={authProps} />} />\n              <Route exact path=\"/products\" render={(props) => <Products {...props} auth={authProps} />} />\n              <Route exact path=\"/admin\" render={(props) => <ProductAdmin {...props} auth={authProps} />} />\n              <Route exact path=\"/login\" render={(props) => <LogIn {...props} auth={authProps} />} />\n              <Route exact path=\"/register\" render={(props) => <Register {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpassword\" render={(props) => <ForgotPassword {...props} auth={authProps} />} />\n              <Route exact path=\"/forgotpasswordverification\" render={(props) => <ForgotPasswordVerification {...props} auth={authProps} />} />\n              <Route exact path=\"/changepassword\" render={(props) => <ChangePassword {...props} auth={authProps} />} />\n              <Route exact path=\"/changepasswordconfirmation\" render={(props) => <ChangePasswordConfirm {...props} auth={authProps} />} />\n              <Route exact path=\"/welcome\" render={(props) => <Welcome {...props} auth={authProps} />} />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport Amplify from \"aws-amplify\";\nimport config from \"./config\";\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  }\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}